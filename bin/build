#!/usr/bin/env python3

from collections import namedtuple
from subprocess import PIPE, Popen
import sys

CheckStatus = namedtuple("CheckStatus", ["name", "success", "output", "error"])


def run_checks(checks: dict[list[str]]) -> list[CheckStatus]:
    processes: dict[str, Popen] = {}
    for name in checks:
        processes[name] = Popen(checks[name],
                                stdout=PIPE, stderr=PIPE, encoding='utf-8',
                                )

    results = []
    for name in processes:
        process = processes[name]
        stdout, stderr = process.communicate()
        results.append(CheckStatus(
            name=name,
            success=process.returncode == 0,
            output=stdout,
            error=stderr,
        ))
    return results


def main(args: list[str]):
    checks = run_checks({
        'prettier': ["yarn", "run", "prettier", "-c", "."],
        'eslint': ["yarn", "lint"],
        'jest': ["yarn", "test"]
    })

    for check in checks:
        if check.success:
            print("OK {name}".format(name=check.name))
        else:
            print("FAIL {name}".format(name=check.name))
            print(check.output)
            print(check.error)


if __name__ == "__main__":
    main(sys.argv[1:])
